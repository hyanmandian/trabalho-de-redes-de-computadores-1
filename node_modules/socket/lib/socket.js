'use strict';

var net = require('net');
var EventEmitter = require('events').EventEmitter;

function Socket() {
    
    this.connections = [];
    
}

Socket.prototype.__proto__ = EventEmitter.prototype; 

Socket.prototype.createServer = function(port, host) {
    
    var self = this;
    
    this.server = net.createServer(function(connection) {
    
        self.connections.push(connection);
        
        self.emit('connection', connection);    
        
        connection.on('end', function() {
            self.emit('disconnect');
            self.connections.splice(self.connections.indexOf(connection), 1);
        }).on('data', function(data) {
            self.emit('data', data.toString());
        }).on('error', function(err) {
            self.emit('error', err); 
        }).on('close', function() {
            self.emit('close');
        });

    }).listen(port, host);
    
    return this;
    
}

Socket.prototype.isConnected = function(connection) {
    
    return this.connections.indexOf(connection) == -1 ? false : true;
    
}

Socket.prototype.createConnection = function(port, host) {
    
    var self = this;
    
    var config = {
        port: port,
        host: host,
    };
    
    this.client = net.connect(config, function() {
        self.emit('connection', self.client);  
    }).on('data', function(data) {
        self.emit('data', data.toString());  
    }).on('end', function() { 
        self.emit('disconnect');
    });
    
    return this;
    
}

module.exports = new Socket();